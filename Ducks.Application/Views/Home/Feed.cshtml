@model Ducks.Application.Models.ViewModels.FeedingVM

@{
    ViewBag.Title = "Feed";
}


<h2>Feed</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="modal fade" id="AjaxDlg" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content" style="width:600px !important">
                <div class="modal-header">
                    <span id="lblDialogTitle" />
                </div>
                <div class="modal-body">
                    <div id="loading" style="display: none; position: absolute; left: 50%;">
                        <i class="fa fa-refresh fa-spin fa-3x fa-fw"></i>
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div id="sectLocation" data-section="Location" style="display:none">
                        <label>Select Country:</label>
                        <select id="ddlCountry" onchange="ApiRequest($(this).val(), '/api/Ducks/Location/States', GetStates)"></select>
                        <div id="sectState">
                            <label>Select State:</label>
                            <select id="ddlState" onchange="ApiRequest($(this).val(), '/api/Ducks/Location/Cities', GetCities)"></select>
                        </div>
                        <div id="sectCity">
                            <label>Select City:</label>
                            <select id="ddlCity"></select>
                        </div>
                        <div id="sectAddressEnter">
                            <label>Enter Address:</label>
                            <input type="text" id="txtAddress" />
                        </div>
                    </div>
                    <div id="sectFood" data-section="Food" style="display:none">
                        <label>Name</label>
                        <input type="text" id="txtFood" />
                        <div id="sectState">
                            <label>Select Unit:</label>
                            <select id="ddlUnit">
                                <option>Select Unit</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" data-section="Food">
                    <div style="float:left">
                        <button id="btnMdlCancel" class="btn btn-default btnModal" type="button" onclick="CancelAdd()">Cancel</button>
                    </div>
                    <div style="float:right">
                        <button type="button" id="btnMdlEnable" class="btn btn-default btnModal" onclick="AddFood($('#txtFood').val(), $('#ddlUnit').val())">Enable</button>
                    </div>
                </div>
                <div class="modal-footer" data-section="Location">
                    <div style="float:left">
                        <button id="btnMdlCancel" class="btn btn-default btnModal" type="button" onclick="CancelAdd()">Cancel</button>
                    </div>
                    <div style="float:right">
                        <button type="button" id="btnMdlEnable" class="btn btn-default btnModal" onclick="AddLocation($('#txtAddress').val(), $('#ddlCity').val())">Enable</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <h4>Feed Duck</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(x => x.Locations, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(x => x.LocationId, new SelectList(Model.Locations, "Key", "Value"))
            <button class="btn btn-default" onclick="Dialog('Location')" type="button">Add new Location</button>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Food, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(x => x.FoodId,new SelectList(Model.Food, "Key", "Value"))
            <button class="btn btn-default" onclick="Dialog('Food')" type="button">Add Food Item</button>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FoodAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FoodAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FoodAmount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateFed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateFed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/bootstrap-datepicker.min.js")
@Styles.Render("~/Content/bootstrap-datepicker.min.css")
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script type="text/javascript">

    var BaseApi = '';

    function Dialog(mode) {
       $('[data-section]').hide();
        $('[data-section="' + mode + '"]').show();
        if (mode == 'Location') {
            ApiRequest('', '/api/Ducks/Location/Countries', GetCountries)
        }
        else {
            ApiRequest('', '/api/Ducks/Food/Units', function (e) {
                for (var i = 0; i < e.length; i++) {
                    $('#ddlUnit').append(new Option(e[i].Name, e[i].Id));
                }
            })
        }
        $('#AjaxDlg').modal('show');
    }

    function CancelAdd() {
    //    ClearModal();
        $('#AjaxDlg').modal('hide');
    }

    $(document).ready(function () {
      $("#DateFed").datepicker({
        format: "yyyy M dd",
        dateInput: true,
        value: new Date()
    });
    })

    function GetStates(arr) {
        $('#ddlState').html('');
         $('#ddlState').append('<option value="-1">Select State/Province</option>');
 for (var i = 0; i < arr.length; i++) {
               $('#ddlState').append('<option value="' + arr[i].Id + '">' + arr[i].Name + '</option>');
        
        }
        }

    function GetCities(arr) {
        $('#ddlCity').html('');
        $('#ddlCity').append('<option value="-1">Select City</option>');
         for (var i = 0; i < arr.length; i++) {
               $('#ddlCity').append('<option value="' + arr[i].Id + '">' + arr[i].Name + '</option>');
        }
        }
    function GetCountries(arr) {
          $('#ddlCountry').append('<option value="-1">Select State/Province</option>');
         for (var i = 0; i < arr.length; i++) {
             $('#ddlCountry').append('<option value="' + arr[i].Id + '">' + arr[i].Name + '</option>');
        }
    }


    function AddFood(name, unitid) {
        var food = { Name: name, UnitId: unitid };
        ApiRequest(food, '/api/Ducks/Food/Add', function (e) {
            $('#Food').append(new Option(e.Name, e.Id, true, true));
             $('#AjaxDlg').modal('hide');
        })
    }

    function AddLocation(address,city) {
        var locations = { Address: address, CityId: city, }
          ApiRequest(locations, '/api/Ducks/Location/Add', function (e) {
            $('#Locations').append(new Option(e.Address, e.Id, true, true));
             $('#AjaxDlg').modal('hide');
        })
    }
    function ApiRequest(data, endpoint, callback) {
    $.ajax({
        type: 'POST',
        url: endpoint,
        data: JSON.stringify(data),
        contentType: 'application/json; charset=utf-8',
        success: function (response) {
            if (typeof(callback) != 'undefined') {
                callback(response);
            }
        }

    });
}
</script>
